import re

hardDrive = {'/': {}}
path = []
dirSub100k = {}
puzzleAnswer = 0


def buildFileSystem():
    currentDir = hardDrive['/']
    count = 0
    with open('day7b-input.txt', 'r') as input:
    #with open('day7-input.txt', 'r') as input:
        for line in input.readlines():
            count += 1
            parsedText = re.split(r' |\n', line)
            parsedText.remove('')
            if parsedText[0] == '$':
                if parsedText[1] == 'cd':
                    command = parsedText[2]
                    if command == '/':
                        pass
                    elif command == '..':
                        currentDir['folderSize'] = sumFileSizes(path, currentDir)
                        childFolderSize = currentDir['folderSize']
                        del path[-1]
                        currentDir = selectDir(path, currentDir)
                        currentDir['folderSize'] += childFolderSize
                        print(currentDir['folderSize'])
                        if currentDir['folderSize'] <= 100000:
                            dirSub100k[path[-1]] = currentDir['folderSize']
                        currentDir['folderSize'] = sumFileSizes(path, currentDir)
                        path.append(command)
                        currentDir = currentDir[path[-1]]
                else:
                    pass
            elif parsedText[0] == 'dir':
                currentDir[parsedText[1]] = {}
            else:
                currentDir[parsedText[1]] = parsedText[0]


def selectDir(path, currentDir):
    currentDir = hardDrive['/']
    for key in path:
        currentDir = currentDir[key]
    return currentDir


def sumFileSizes(path, currentDir):
    folderSize = 0
    for item in currentDir:
        if type(currentDir[item]) == str:
            folderSize += int(currentDir[item])
    return folderSize


buildFileSystem()
print(dirSub100k)
for dir in dirSub100k:
    print(dir)
    puzzleAnswer += dirSub100k[dir]

print(puzzleAnswer)
print('hardDrive: ', hardDrive)
